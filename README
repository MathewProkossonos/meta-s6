This README file contains information on the contents of the
s6 layer.

Please see the corresponding sections below for details.


Dependencies
============

This layer depends on:

  URI: git://git.openembedded.org/bitbake
  branch: master

  URI: git://git.openembedded.org/openembedded-core
  layers: meta
  branch: master

Patches
=======

Please submit patches by making a merge request on github.

Maintainer: John O'Meara <john.fr.omeara@gmail.com>


Table of Contents
=================

  I. Adding the s6 layer to your build
 II. Misc


I. Adding the s6 layer to your build
=================================================

In order to use this layer, you need to make the build system aware of
it.

Assuming the s6 layer exists at the top-level of your
yocto build tree, you can add it to the build system by adding the
location of the s6 layer to bblayers.conf, along with any
other layers needed. e.g.:

  BBLAYERS ?= " \
    /path/to/yocto/meta \
    /path/to/yocto/meta-yocto \
    /path/to/yocto/meta-yocto-bsp \
    /path/to/yocto/meta-s6 \
    "


II. Misc
========

Should work out-of-the-box if your target machine is similar to your host
(e.g. x86-64 on x86-64 or x86 on x86-64).

If you are building a cross (e.g. arm on x86-64), then skalibs won't build
directly due to not being able to guess target machine parameters. There are
two ways to fix this:

  1) Add a bbappend in your layer to provide a premade sysdeps set, and run
     skalib's configure against that sysdeps

  2) Setup Linux to execute elf files of your target via qemu-user mode. If
     you do this, you'll also need your target's ld (dynamic linker) and libc.
     Since the linker is typically named after the target (e.g.
     ld-linux-armhf.so.3) it can go directly into your /lib. The libc is more
     tricky, and you may have to play with the search path a bit. For example,
     the arm tools for raspberry pi search in /lib/neon (among many other
     subdirectories), where the x86-64 host does not, so the arm libc can go
     there. Other architectures/machines may vary.
