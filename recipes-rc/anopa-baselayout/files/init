#!/bin/sh
echo
echo -e "\033[32mSystem init\033[0;1m"
#sleep 2
# Only mount proc if it isn't yet mounted. For example, an iso boot's
# initramfs will pre-mount this before we are called.
if [ ! -e /proc/1 ]; then
    mount -t proc proc /proc
fi
if [ ! -e /sys/kernel ]; then
    mount -t sysfs sys /sys
fi
# If we mount run volatily, the anopa initrd loses itself. If we don't and are
# running from persistant storage, we can't reboot.
if ! grep -q \ /run\  /proc/mounts; then
    mount -t tmpfs none /run
fi
#mount -t tmpfs none /run
# Our builder can't handle having FIFOs yet, so we'll make it ourselves if it
# doesn't exist yet
if [ ! -e /etc/anopa/services/uncaught-logs/fifo ]; then
    mkfifo /etc/anopa/services/uncaught-logs/fifo
fi
mount -t tmpfs none /var/volatile
mkdir /var/volatile/log
mkdir /var/volatile/log/boot
# Stage1 on anopa-0.5+next now requires that /var/lib/repodir exist and be
# pre-populated, which will be copied to the volatile services directory,
# instead of generating it during boot. Not having it is therefore fatal, so
# if it doesn't exist, we'll generate it. We won't do anything fancy here,
# like making sure it is valid enough.
# TODO: Should we make use of some other features?
if [ ! -e /var/lib/repodir/onboot ]; then
    mkdir -p /var/lib/repodir
    echo "Generating on-boot repo"
    aa-enable -l onboot -r /var/lib/repodir/onboot -i /libexec/aa-stage2 -f /libexec/aa-stage3
    aa-enable -r /var/lib/repodir/onboot -k uncaught-logs uncaught-logs
fi
if aa-incmdline debstage0; then
    echo "Debug stage 0 requested."
    echo "run 'exec /libexec/aa-stage1' to resume startup"
    exec /bin/sh
fi
exec /libexec/aa-stage1
# Just incase above exec fails, fall back to a shell
exec /bin/sh
